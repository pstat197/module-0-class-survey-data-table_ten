---
title: "Analysis of class surveys"
subtitle: "If you want a subtitle put it here"
author: "List names here"
date: last-modified
published-title: "Updated"
editor: visual
format: html
code-copy: true
execute:
  message: false
  warning: false
  echo: false
  cache: true
---

Use this as a template. Keep the headers and remove all other text. Overall, your report may be quite short. When it is complete, render and then push changes to your team repository.

```{r}
# load any other packages and read data here
library(tidyverse)
library(ggplot2)
library(dplyr)
library(scales)

background <- read_csv('../data/background-clean.csv')
interest <- read_csv('../data/interest-clean.csv')

all_data <- background %>% inner_join(interest, by = join_by(response_id)) %>% rename(c(domain_yn = dom.x, domain_type = dom.y, research_or_industry = do_you_have_any_preference_regarding_working_on_an_industry_project_or_a_research_lab_project))

all_data$lang[all_data$response_id == 29] <- "Python"
```

## Executive summary

Write a one-paragraph abstract summarizing what you did and your findings. It need not be comprehensive; try to highlight the most important or interesting outcomes.

## Data description

-   **Source:** Survey distributed to all students offered enrollment in **PSTAT197A, Fall 2025**.

-   **Sample Size:** 𝑛 = 60 responses.

-   **Sampling:** No random selection. Can be considered:

    -   A census of PSTAT197A enrollees, or

    -   A convenience sample of students interested in **data science/capstones**.

**Sample Characteristics:**

| Characteristic       | Count | Percent |
|----------------------|-------|---------|
| **Class Standing**   |       |         |
| Junior               | 9     | 15%     |
| Senior               | 51    | 85%     |
| **Gender Identity**  |       |         |
| Female               | 28    | 46.7%   |
| Male                 | 32    | 53.3%   |
| **Race / Ethnicity** |       |         |
| Asian                | 43    | 71.7%   |
| Caucasian            | 13    | 21.7%   |
| Multiracial          | 3     | 5%      |
| Prefer not to say    | 1     | 1.7%    |

**Consent for sharing:**

| Share background | Share project preferences | Count |
|------------------|---------------------------|-------|
| Yes              | Yes                       | 49    |
| Yes              | No                        | 2     |
| No               | Yes                       | 3     |
| No               | No                        | 6     |

**Measurements Collected:**

-   **Self-reported proficiency** in programming, math, and statistics: `beg`, `int`, `adv`.

-   **Comfort levels** (numeric scale 1–5) in programming (`prog.comf`), math (`math.comf`), statistics (`stat.comf`).

-   **Course history:** Counts of courses taken in departments like PSTAT, CS, LING, ECON.

-   **Past research experience**, project preferences, and demographic info.

**Notes on the dataset:**

-   Personal information, free-text responses, and students who did not consent were removed.

-   Some variables, like distinctions in research experiences, were simplified for analysis.

**Summary Statistics:**

| Variable  | Mean | Median | Min | Max |
|-----------|------|--------|-----|-----|
| prog.comf | 3.86 | 4      | 2   | 5   |
| math.comf | 4.04 | 4      | 3   | 5   |
| stat.comf | 4.04 | 4      | 2   | 5   |

-   Proficiency levels (numeric) roughly align with comfort ratings:

    -   `prog`: 2.9 (mean)

    -   `math`: 2.78

    -   `stat`: 2.83

## Questions of interest

We sought to understand how PSTAT 197A students’ programming language preferences relate to their academic background, skills, and project interests. In particular, we examined whether language preference aligns with coursework patterns in different departments, students’ domain interests, project type preferences (industry vs. research), class level or standing, and overall academic background.

1.  Does a student’s preferred programming language (R, Python, or no preference) influence their self-reported proficiency and comfort in programming and math?
2.  How does students’ academic background (past research and coursework) relate to their programming language preference?
3.  Is there a relationship between programming language preference and domain specialties?

## Findings

The following analyses, utilizing exploratory data analysis and statistical testing, examine how students’ programming language preference (R, Python, or No preference) relates to their proficiency and comfort in programming and math.

### Exploratory Data Analysis

The boxplot below illustrates the distributions of programming and math comfort and proficiency scores by language preference:

```{r}
# Visualize mean differences
ggplot(data_long, aes(x = lang, y = score, fill = skill_type)) +
  geom_boxplot() +
  labs(
    title = "Plot 1: Comfort and Proficiency by Language Preference",
    x = "Language Preference",
    y = "Score (1–5 scale or recoded proficiency)",
    fill = "Skill Type"
  ) +
  theme_minimal()
```

From the plot, we see that **median scores are similar across language preferences** for both programming and math. Programming proficiency and comfort are slightly higher on average than math scores, consistent with the overall skill distribution in the class. The following chart displays the distribution of students that prefer each programming language in the class. As shown, a majority of students (around 60%) prefer Python, around 22% of students are not partial toward either language, and around 18% of the class prefers R.

```{r}
lang_summary <- all_data %>%
  count(lang) %>%
  mutate(prop = n / sum(n)) %>%
  arrange(desc(prop))

## Bar Chart Of Language Preference w/ Percents

ggplot(lang_summary, aes(x = reorder(lang, -prop), y = prop, fill = lang)) +
  geom_col() +
  geom_text(aes(label = scales::percent(prop, accuracy = 0.1)), 
            vjust = -0.5, size = 4) +
  scale_y_continuous(labels = scales::percent_format()) +
  labs(
    title = "Plot 2: Proportions of Language Preference",
    x = "Preferred Language",
    y = "Percentage"
  ) +
  theme_minimal() +
  theme(legend.position = "none")
```

The bar chart below illustrates the relationship between students’ project type preferences and their preferred programming language.

```{r}
plot_data <- all_data %>%
  count(lang, type) %>%
  group_by(lang) %>%
  mutate(prop = n / sum(n))

# Distribution of those who prefer each type of Project
# By Language Preference
ggplot(plot_data, aes(x = lang, y = prop, fill = type)) +
  geom_col(position = "fill") +
  geom_text(
    aes(label = percent(prop, accuracy = 1)),
    position = position_fill(vjust = 0.5),
    size = 4
  ) +
  labs(
    title = "Plot 3: Project Type Preference by Language Preference",
    x = "Preferred Language",
    y = "Proportion",
    fill = "Project Type Preference"
  ) +
  scale_y_continuous(labels = percent) +
  theme_minimal()

```

The figure shows that a majority of those who prefer Python (79%) prefer to work on an industry-sponsored project, whereas a majority of students that prefer R either do not prefer one type of project over another. This may be due to the fact that Python is more prevalent in the industry, so students who prefer Python are more likely to seek industry-sponsored projects rather that research-based projects, which tend to use R.

It is also useful to examine the proportions of students who have past research experience and their programming language preference:

```{r}
# Get background information on all individuals who prefer R
R_background = background %>%
  filter(response_id %in% R_ids$response_id)

# Get background information on all individuals who prefer Python
Python_background = background %>%
  filter(response_id %in% Python_ids$response_id)

# R research proportions
R_rsrch_prop = R_background %>%
  select(rsrch) %>%
  count(rsrch) %>%
  arrange(desc(n)) %>%
  mutate("prop" = n / sum(n))

kable(R_rsrch_prop,
      caption = "Past research proportions for R preference")

# Python research proportions
Python_rsrch_prop = Python_background %>%
  select(rsrch) %>%
  count(rsrch) %>%
  arrange(desc(n)) %>%
  mutate("prop" = n / sum(n))

kable(Python_rsrch_prop,
      caption = "Past research proportions for Python preference")
```

Alternatively, might also want to express these statistics as plots:

```{r}
# Plotting

R_rsrch_prop_plot = R_rsrch_prop %>%
  ggplot(aes(x = rsrch, y = prop)) +
  geom_bar(stat = "identity") +
  scale_y_continuous(limits = c(0, 1)) +
  labs(
    title = "Plot 4: Past Research Experience",
    subtitle = "For those preferring R",
    x = "Past Research Experience",
    y = "Proportion"
  )


Python_rsrch_prop_plot = Python_rsrch_prop %>%
  ggplot(aes(x = rsrch, y = prop)) +
  geom_bar(stat = "identity") +
  scale_y_continuous(limits = c(0,1)) +
  labs(title = "Plot 5: Past Research Experience",
       subtitle = "For those preferring Python",
       x = "Past Research Experience",
       y = "Proportion")

library(gridExtra)
grid.arrange(
  R_rsrch_prop_plot,
  Python_rsrch_prop_plot,
  nrow=1
)
```

Upon examining the above tables and plots, those who prefer R show a higher proportion of past research experience, nearly 10%, compared to those who prefer Python. This suggests that among students enrolled in PSTAT197A, R tends to be the more research-oriented language.

Now that we understand a reason why certain students select R over Python, we naturally ask the question: how do coding language preferences influence course selection? domain specialties? Are these again, more geared towards research for R users, and likewise for industry for Python users?

The following chart shows that programming language preference is associated with coursework patterns:

```{r}
# course groups from list
course_cols <- c("PSTAT100", "PSTAT115", "PSTAT120", "PSTAT122", "PSTAT126", 
                 "PSTAT131", "PSTAT160", "PSTAT174", "CS9", "CS16", "LING104", 
                 "LING110", "LING111", "CS130", "CS165", "ECON145", "PSTAT127", 
                 "PSTAT134", "CS5")

pstat_courses <- c("PSTAT100", "PSTAT115", "PSTAT120", "PSTAT122", "PSTAT126", 
                   "PSTAT131", "PSTAT160", "PSTAT174", "PSTAT127", "PSTAT134")
cs_courses <- c("CS9", "CS16", "CS130", "CS165", "CS5")
ling_courses <- c("LING104", "LING110", "LING111")
econ_courses <- c("ECON145")

# average number of courses taken by language preference
# more CS courses -> Python
# more PSTAT, Ling --> R

course_averages <- all_data %>%
  filter(lang %in% c("R", "Python", "No preference")) %>%
  mutate(
    pstat_total = rowSums(select(., all_of(pstat_courses)), na.rm = TRUE),
    cs_total = rowSums(select(., all_of(cs_courses)), na.rm = TRUE),
    ling_total = rowSums(select(., all_of(ling_courses)), na.rm = TRUE),
    econ_total = rowSums(select(., all_of(econ_courses)), na.rm = TRUE)
  ) %>%
  group_by(lang) %>%
  summarise(
    n = n(),
    avg_pstat = mean(pstat_total, na.rm = TRUE),
    avg_cs = mean(cs_total, na.rm = TRUE),
    avg_ling = mean(ling_total, na.rm = TRUE),
    avg_econ = mean(econ_total, na.rm = TRUE),
    avg_total = mean(pstat_total + cs_total + ling_total + econ_total, na.rm = TRUE)
  )

course_avg_long <- course_averages %>%
  select(lang, avg_pstat, avg_cs, avg_ling, avg_econ) %>%
  pivot_longer(cols = starts_with("avg_"), 
               names_to = "course_type", 
               values_to = "avg_courses") %>%
  mutate(course_type = case_when(
    course_type == "avg_pstat" ~ "PSTAT",
    course_type == "avg_cs" ~ "CS",
    course_type == "avg_ling" ~ "LING",
    course_type == "avg_econ" ~ "ECON"
  ))

ggplot(course_avg_long, aes(x = course_type, y = avg_courses, fill = lang)) +
  geom_col(position = "dodge") +
  geom_text(
    aes(label = round(avg_courses, 2)),
    position = position_dodge(width = 0.9),
    vjust = -0.5,
    size = 3.5
  ) +
  labs(
    title = "Plot 6: Average Number of Courses Taken by Language Preference",
    x = "Course Department",
    y = "Average Number of Courses",
    fill = "Language Preference"
  ) +
  theme_minimal() +
  theme(legend.position = "top")
```

Students preferring R have taken more PSTAT courses (5.22 average) compared to Python-preferring students (4.55), showing more PSTAT coursework and experience is correlated with R preference. Conversely, Python-preferring students have completed more CS courses (1.52 vs. 1.11), aligning with Python's prominence in computer science. ECON and LING courses show less variation across language preferences, suggesting they don't heavily influence language choice. Overall, the data indicates that students' language preferences reflect their disciplinary preparation.

### Statistical Testing

#### **Comfort and Proficiency by Language**

We first converted students’ self-reported proficiency levels in programming and math into numeric scores (1 = beginner, 2 = intermediate, 3 = advanced) and combined them with their comfort scores. The table below shows the ANOVA results testing for differences in these scores by language preference:

```{r}
background <- read_csv("../data/background-clean.csv")
interest   <- read_csv("../data/interest-clean.csv")

# Inner join by response ID
data <- inner_join(background, interest, by = "response_id")

# Only select needed columns
data <- data %>%
  select(lang, prog.prof, prog.comf, math.prof, math.comf)

library(dplyr)

# Turn text proficiency levels into numbers
data <- data %>%
  mutate(
    prog.prof.num = recode(prog.prof, "beg" = 1, "int" = 2, "adv" = 3
    ),
    math.prof.num = recode(math.prof, "beg" = 1, "int" = 2, "adv" = 3
    )
  )

# Pivot longer
data_long <- data %>%
  pivot_longer(
    cols = c(prog.prof.num, prog.comf, math.prof.num, math.comf),
    names_to = "skill_type",
    values_to = "score"
  ) %>%
  mutate(
    skill_type = recode(skill_type,
                        "prog.prof.num" = "Programming Proficiency",
                        "prog.comf" = "Programming Comfort",
                        "math.prof.num" = "Math Proficiency",
                        "math.comf" = "Math Comfort")
  )

# Run ANOVA: Does comfort/proficiency differ by language?
anova_result <- aov(score ~ lang * skill_type, data = data_long)
summary(anova_result)
```

The ANOVA indicates that **there is a significant difference between skill types** (Programming vs Math, Proficiency vs Comfort), but **no significant differences between languages** or their interaction with skill type. In other words, students’ comfort and proficiency levels are fairly similar across those preferring R, Python, or having no preference.
